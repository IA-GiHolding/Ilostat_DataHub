# .github/workflows/update_data_workflow.yml
name: Actualizar Datos Automáticamente

on:
  schedule:
    # Esto ejecuta el workflow cada día a las 00:00 UTC
    # Puedes ajustar la expresión cron a tus necesidades:
    # '0 0 * * *'  -> cada día a medianoche
    # '0 * * * *'  -> cada hora
    # Para más información sobre cron: https://crontab.guru/
    - cron: '0 0 * * *' 

  # Esto permite ejecutar el workflow manualmente desde la interfaz de GitHub
  workflow_dispatch: 

jobs:
  update-data:
    runs-on: ubuntu-latest # El entorno en el que se ejecutará el workflow

    steps:
      - name: Checkout repository
        # Baja el código de tu repositorio al entorno de GitHub Actions
        uses: actions/checkout@v3 
        with:
          # Esto es crucial para permitir que el workflow haga commits de vuelta al repo
          # 'github-token' es un token temporal que GitHub proporciona automáticamente
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        # Configura el entorno de Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # Asegúrate de que coincida con tu versión de Python

      - name: Install dependencies
        # Instala las librerías que tu script Python necesita
        run: |
          pip install pandas requests

      - name: Run data update script
        # Ejecuta tu script Python de actualización de datos
        run: python update_data.py

      - name: Commit and push changes
        # Configura Git, añade los archivos modificados, hace un commit y lo sube
        run: |
          git config user.name "GitHub Actions Bot" # Nombre del usuario para el commit
          git config user.email "actions@github.com" # Email del usuario

          # Revisa si hay cambios antes de commitear
          git add .
          git diff-index --quiet HEAD || git commit -m "Datos actualizados automáticamente [skip ci]"
          # 'skip ci' en el mensaje del commit le dice a otros workflows (ej. despliegue de Streamlit)
          # que no se disparen por este commit de datos, a menos que realmente lo necesites.

          # Solo push si hubo un commit
          git push || echo "No hay cambios para subir"